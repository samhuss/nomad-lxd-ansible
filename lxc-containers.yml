---
- hosts: master #localhost in inventory/hosts file
  # run this task in the host
  #connection: local
  # set urls as variables
  # vars:
  #   consul_version: "1.6.0-beta3"
  #   # nomad_version: "0.10.0-connect1"
  #   nomad_version: "0.10.0-beta1"
  #   traefik_version: "1.7.13"
  #   consul_url: "https://releases.hashicorp.com/consul/{{ consul_version }}/consul_{{ consul_version }}_linux_amd64.zip"
  #   nomad_url: "https://releases.hashicorp.com/nomad/{{ nomad_version }}/nomad_{{ nomad_version }}_linux_amd64.zip"
  #   traefik_url: "https://github.com/containous/traefik/releases/download/v{{ traefik_version }}/traefik_linux-amd64"
  #   jety_url: https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-distribution/9.4.19.v20190610/jetty-distribution-9.4.19.v20190610.zip

  tasks:
    - name: create containers
      # get all host names from inventory
      loop: "{{ groups['lxc_containers'] }}"
      # use lxd_container module from ansible to create containers
      lxd_container:
        # container name is the hostname
        name: "{{ item }}"
        state: started
        source:
          type: image
          mode: pull
          server: https://images.linuxcontainers.org
          # alias: ubuntu/bionic/amd64
          alias: ubuntu/disco/amd64
        config:
          # nomad clients need some privileges to be able to run docker containers
          security.nesting: "{{ 'true' if item in ['nomad-client1', 'nomad-client2', 'nomad-client3'] else 'false' }}"
          security.privileged: "{{ 'true' if item in ['nomad-client1', 'nomad-client2', 'nomad-client3'] else 'false' }}"
        devices:
          # configure network interface
          eth0:
            type: nic
            nictype: bridged
            parent: lxdbr0
            # get ip address from inventory
            #ipv4.address: "{{ hostvars[item].ip_address }}"
            #ipv4.address: "auto"
        # uncomment if you installed lxd using snap
        url: unix:/var/snap/lxd/common/lxd/unix.socket
    
    - name: create cache sirectory in home directory
      file: {path: "/opt/ansible/cache", state: directory, owner: "{{ansible_user}}", group: "{{ansible_user}}" }
        



    # this task is disabled for now as dnsmasq on the host machine + consul DNS are resolving containers host names automatically
    # # update local hosts file with new lxc containers IPs
    # - name: " Update hosts file with lxc containers"
    #   become: true
    #   lineinfile: dest=/etc/hosts regexp='.*{{ item }}$' line="{{ ansible_default_ipv4.address }}     {{item}}" state=present
    #   when: hostvars[item].ansible_default_ipv4.address is defined
    #   with_items: "{{groups['all'] }}"


# - hosts: consul_servers
#   roles:
#     - consul_server

# - hosts: nomad_servers
#   roles:
#     - consul_client
#     - nomad_server

# - hosts: nomad_clients
#   roles:
#     - consul_client
#     - nomad_client

# - hosts: proxy
#   roles:
#     - consul_client
#     - proxy
