# The number of milliseconds of each tick
tickTime={{zookeeper_tick_time|default(2000)}}

# The number of ticks that the initial
# synchronization phase can take
initLimit={{zookeeper_init_limit|default(10)}}

# The number of ticks that can pass between
# sending a request and getting an acknowledgement
syncLimit={{zookeeper_sync_limit|default(5)}}

# the directory where the snapshot is stored.
dataDir={{zookeeper_data_dir}}
dataLogDir={{zookeeper_datalog_dir}}

# the port at which the clients will connect
clientPort={{zookeeper_client_port|default(2181)}}
#clientPortAddress={{zookeeper_client_port_address|default("0.0.0.0")}}
#clientPortAddress={{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }} 
clientPortAddress=0.0.0.0

# the maximum number of client connections.
# increase this if you need to handle more clients
maxClientCnxns={{zookeeper_max_client_cnxns|default(60)}}

# The number of snapshots to retain in dataDir
autopurge.snapRetainCount={{zookeeper_autopurge_snapretaincount|default(3)}}
# Purge task interval in hours
# Set to "0" to disable auto purge feature
autopurge.purgeInterval={{zookeeper_autopurge_purgeinterval|default(1)}}

{% if zookeeper_network.type == "static" %}
{% if zookeeper_network.peer_type == "observer" %}
peerType=observer
{% endif %}

{% endif %}

{# 
{% for peer in zookeeper_network.peers %}
server.{{peer.id}}={{peer.peer}}:{{peer.port|default(2888)}}:{{peer.election_port|default(3888)}}{% if peer.type == "observer" %}:observer{% endif %}
{% endfor %}
{% else %}
{% if not inventory_hostname in groups[zookeeper_network.quorum_group_name|default("zookeeper-quorum")] %}
peerType=observer
{% endif %}
{% for host in groups[zookeeper_network.group_name|default("zookeeper")] %}
server.{{hostvars[host]['zookeeper_myid']}}={% if zookeeper_network.use_ips %}{{hostvars[host]['ansible_' + zookeeper_network.iface]['ipv4']['address']}}{% else %}{{host}}{% endif %}:{{zookeeper_peer_port|default(2888)}}:{{zookeeper_election_port|default(3888)}}{% if not host in groups[zookeeper_network.quorum_group_name] %}:observer{% endif %}
{% endfor %}

#}

{# 
#FYI: resolve ip address for a host
server.{{hostvars[host]['zookeeper_myid']}}={{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:{{zookeeper_peer_port}}:{{zookeeper_election_port}}
#}

{#

{% for host in groups[zookeeper_network.group_name|default("zookeepers")] %}

server.{{hostvars[host]['zookeeper_myid']}}={{ hostvars[host]['ansible_default_ipv4']['address'] }}:{{zookeeper_peer_port}}:{{zookeeper_election_port}}

{% endfor %}

#}



{% for host in groups[zookeeper_network.group_name|default("zookeepers")] %}

{% if host == inventory_hostname %}
{#server.{{hostvars[host]['zookeeper_myid']}}={{ hostvars[host]['ansible_default_ipv4']['address'] }}:{{zookeeper_peer_port}}:{{zookeeper_election_port}} #}
server.{{hostvars[host]['zookeeper_myid']}}=0.0.0.0:{{zookeeper_peer_port}}:{{zookeeper_election_port}}
{% else %}
{#server.{{hostvars[host]['zookeeper_myid']}}={{ hostvars[host]['ansible_default_ipv4']['address'] }}:{{zookeeper_peer_port}}:{{zookeeper_election_port}} #}
server.{{hostvars[host]['zookeeper_myid']}}={{host}}.node.consul:{{zookeeper_peer_port}}:{{zookeeper_election_port}} 
{% endif %}
{% endfor %}
{# 
#}